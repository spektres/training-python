"""Внутри класса может быть создан идентификатор, через который будут 
производиться операции по получению и изменению значения 
атрибута, а также операция удаления атрибута. Создать такой 
идентификатор моно с помощью функции property(): 

<Свойство> = рrореrtу(<Чтение>[, <Запись>[, <Удаление[, 
<Строка>] ] ] ) 

Первые три параметра определяют соответствующий метод класса. 
При чтении значения будет вызван метод, указанный в первом параметре. 
При попытке записи - метод, указанный во втором параметре. 
При удалении атрибута вызывается метод, указанный в третьем параметре. 
Если в качестве какого-либо параметра указано None, то это 
означает, что этот метод не поддерживается. Последний параметр -
это строка документирования. """

class PropertySampleClass: 
    def __init__ (self, х) : 
        self.__p = х 
    def get_p(self): 
        return self.__p 
    def set_p(self, х): 
        self.__p = х 
    def del_p(self): 
        del self.__p 
    prop = property(get_p, set_p, del_p, "Info")

obj = PropertySampleClass(1)
print(obj.prop) # Вызывается метод get_p 
obj.prop = 5 # Вызывается метод set_p 
del obj.prop # Вызывается метод del_p 
